Server/Host: test-rangeroffroad-com.3dcartstores.com
Login: test.rangeroffroad.com|tesn23uf
Password: @76NoltDbtRh8!



test.rangeroffroad.com|tesn23uf@test-rangeroffroad-com.3dcartstores.com

ssh -f -N -L 2100:test-rangeroffroad-com.3dcartstores.com:21 test.rangeroffroad.com|tesn23uf@webserver.com


OK, we are going to use SSH to open a secure connection to the server, and then present the open end of the client pipe to the local machine. This can be done with the following command in a terminal session (assuming you are using Linux or a Mac – you can of course tunnel using PuTTY if you are using Windows):

ssh -f -N -L 2100:webserver.com:21 user@webserver.com

What we are saying here, is SSH to webserver.com, and pipe remote port 21 to local (-L) port 2100. Don’t send any commands (-N), and place SSH into the background (-f) if you want to leave the process running after you close the terminal window. Or leave off the -f and just Ctrl-Z and bg the job into the background.

Once the tunnel is set up (if you don’t use the -f switch, then the terminal session will just sit there until you kill it) you just use your FTP program on your own computer to connect to localhost on port 2100… you should find yourself being connected to the FTP service on your server!

In fact, this technique can be applied to access any insecure service on your server in a secure manner.